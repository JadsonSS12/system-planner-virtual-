@model IEnumerable<Planner.Models.Tarefa>

@{
    ViewData["Title"] = "Tarefas";

    // Definindo cores para cada categoria
    var categoriaCores = new Dictionary<Planner.Models.Enum.Categoria, string>
    {
        { Planner.Models.Enum.Categoria.Trabalho, "#ff8c00" },  // Laranja
        { Planner.Models.Enum.Categoria.Pessoal, "#1e90ff" },   // Azul
        { Planner.Models.Enum.Categoria.Estudo, "#32cd32" },    // Verde
        { Planner.Models.Enum.Categoria.Saude, "#ff1493" },     // Rosa
        { Planner.Models.Enum.Categoria.Lazer, "#ff4500" },     // Vermelho
        { Planner.Models.Enum.Categoria.Outros, "#8a2be2" }     // Roxo
    };

    // Definindo cores suaves para cada status
    var statusCores = new Dictionary<Planner.Models.Enum.StatusTarefa, string>
    {
         { Planner.Models.Enum.StatusTarefa.NaoIniciada, "#ffffff" }, // Branco
        { Planner.Models.Enum.StatusTarefa.executada, "#b7db6f" },    // Verde mais forte
        { Planner.Models.Enum.StatusTarefa.parcialmenteExecutada, "#ffdf7e" }, // Amarelo mais forte
        { Planner.Models.Enum.StatusTarefa.adiada, "#f1948a" }       // Vermelho mais forte
    };
}

<h2>@ViewData["Title"]</h2>

<form method="get" class="mt-3">
    <div class="row">
        <div class="col-md-3">
            <div class="form-group">
                <label for="categoria">Categoria</label>
                <select id="categoria" name="categoria" class="form-control">
                    <option value="">Todas</option>
                    @foreach (var categoria in Enum.GetValues(typeof(Planner.Models.Enum.Categoria)).Cast<Planner.Models.Enum.Categoria>())
                    {
                        <option value="@categoria">@categoria</option>
                    }
                </select>
            </div>
        </div>

        <div class="col-md-3">
            <div class="form-group">
                <label for="status">Status</label>
                <select id="status" name="status" class="form-control">
                    <option value="">Todos</option>
                    @foreach (var status in Enum.GetValues(typeof(Planner.Models.Enum.StatusTarefa)).Cast<Planner.Models.Enum.StatusTarefa>())
                    {
                        <option value="@status">@status</option>
                    }
                </select>
            </div>
        </div>

        <div class="col-md-3">
            <div class="form-group">
                <label for="mes">Mês</label>
                <select id="mes" name="mes" class="form-control">
                    <option value="">Todos</option>
                    @for (int i = 1; i <= 12; i++)
                    {
                        <option value="@i">@i</option>
                    }
                </select>
            </div>
        </div>

        <div class="col-md-3">
            <div class="form-group">
                <label for="ano">Ano</label>
                <select id="ano" name="ano" class="form-control">
                    <option value="">Todos</option>
                    @for (int i = DateTime.Now.Year - 10; i <= DateTime.Now.Year + 10; i++)
                    {
                        <option value="@i">@i</option>
                    }
                </select>
            </div>
        </div>

        <!-- Campo para Data Início -->
        <div class="col-md-3">
            <div class="form-group">
                <label for="dataInicio">Data Início</label>
                <input type="date" id="dataInicio" name="dataInicio" class="form-control" value="@DateTime.Now.ToString("yyyy-MM-dd")" />
            </div>
        </div>

        <!-- Campo para Data Fim -->
        <div class="col-md-3">
            <div class="form-group">
                <label for="dataFim">Data Fim</label>
                <input type="date" id="dataFim" name="dataFim" class="form-control" value="@DateTime.Now.ToString("yyyy-MM-dd")" />
            </div>
        </div>
    </div>
    <button type="submit" class="btn btn-primary" style="margin-top: 0.6em; background-color: #ce854d; border-color: #ce854d; color: white; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);">Filtrar</button>
</form>

<table class="table mt-3">
    <thead>
        <tr>
            <th>Título</th>
            <th>Descrição</th>
            <th>Categoria</th>
            <th>Status</th>
            <th>Inicio</th>
            <th>Fim</th>
            <th>Dia</th>
            <th>Ações</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var tarefa in Model)
        {
            var categoriaCor = categoriaCores.ContainsKey(tarefa.CategoriaAtividade)
                ? categoriaCores[tarefa.CategoriaAtividade]
                : "#000000"; // Cor padrão se a categoria não for encontrada

            var statusCor = statusCores.ContainsKey(tarefa.StatusTarefa)
                ? statusCores[tarefa.StatusTarefa]
                : "#ffffff"; // Cor padrão se o status não for encontrado

            var rowClass = "";
            if (tarefa.Dia < DateTime.Now.Date && tarefa.StatusTarefa != Planner.Models.Enum.StatusTarefa.executada)
            {
                rowClass = "tarefa-passada";
            }
            else if (tarefa.StatusTarefa == Planner.Models.Enum.StatusTarefa.executada)
            {
                rowClass = "tarefa-executada";
            }

            <tr class="@rowClass" style="background-color: @statusCor; color: #333;">
                <td>@tarefa.Titulo</td>
                <td>@tarefa.Descricao</td>
                <td style="color: @categoriaCor">@tarefa.CategoriaAtividade</td> <!-- Categoria com cor -->
                <td>@tarefa.StatusTarefa</td>
                <td>@tarefa.Inicio.ToString(@"hh\:mm")</td>
                <td>@tarefa.Fim.ToString(@"hh\:mm")</td>          
                <td>@tarefa.Dia.ToShortDateString()</td>
                <td>
                    <a href="@Url.Action("Detalhes", new { id = tarefa.Id })" class="btn btn-info" style="background-color: #ceb751; border-color: #ceb751; color: white; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);">Detalhes</a>
                    <a href="@Url.Action("Editar", new { id = tarefa.Id })" class="btn btn-warning" style="background-color: #d6e9b8; border-color: #dae8c4; color: black; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);">Editar</a>
                    <a href="@Url.Action("Deletar", new { id = tarefa.Id })" class="btn btn-danger" style="background-color: #ce5069; border-color: #ce5069; color: white; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);">Deletar</a>
                   
                   <!-- Dropdown para alterar o status -->
                    <form asp-action="AlterarStatus" method="post" class="d-inline">
                        <input type="hidden" name="id" value="@tarefa.Id" />
                        <select name="novoStatus" class="form-control d-inline w-auto">
                            @foreach (var status in Enum.GetValues(typeof(Planner.Models.Enum.StatusTarefa)))
                            {
                                if (tarefa.StatusTarefa == (Planner.Models.Enum.StatusTarefa)status)
                                {
                                    <option value="@status" selected>@status</option>
                                }
                                else
                                {
                                    <option value="@status">@status</option>
                                }
                            }
                        </select>
                        <button type="submit" class="btn btn-secondary" style="background-color: #6c757d; border-color: #6c757d; color: white; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);">Alterar Status</button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>

<div>
    <a href="@Url.Action("Adicionar")" class="btn btn-success" style="background-color: #ce5069; border-color: #ce5069; color: white; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);">Adicionar Nova Tarefa</a>
</div>
